// If you'd like to override the default keybindings completely, be sure to change "keybinds" to "keybinds clear-defaults=true"
keybinds clear-defaults=true{
    normal {
        bind "Alt c" { Copy; }
    }
    locked {
        bind "Ctrl space" { SwitchToMode "Normal"; }
    }
    resize {
        bind "r" { SwitchToMode "Normal"; }
        bind "m" "Left" { Resize "Increase Left"; }
        bind "n" "Down" { Resize "Increase Down"; }
        bind "e" "Up" { Resize "Increase Up"; }
        bind "i" "Right" { Resize "Increase Right"; }
        bind "M" { Resize "Decrease Left"; }
        bind "N" { Resize "Decrease Down"; }
        bind "E" { Resize "Decrease Up"; }
        bind "I" { Resize "Decrease Right"; }
        bind "=" "+" { Resize "Increase"; }
        bind "-" { Resize "Decrease"; }
    }
    pane {
        bind "p" { SwitchToMode "Normal"; }
        bind "p" { SwitchFocus; }
        bind "n" { NewPane; SwitchToMode "Locked"; }
        bind "d" { NewPane "Down"; SwitchToMode "Locked"; }
        bind "i" { NewPane "Right"; SwitchToMode "Locked"; }
        bind "x" { CloseFocus; SwitchToMode "Locked"; }
        bind "f" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
        bind "z" { TogglePaneFrames; SwitchToMode "Locked"; }
        bind "w" { ToggleFloatingPanes; SwitchToMode "Locked"; }
        bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "Locked"; }
        bind "r" { SwitchToMode "RenamePane"; PaneNameInput 0;}
        bind "i" { TogglePanePinned; SwitchToMode "Locked"; }
    }
    move {
        bind "m" { SwitchToMode "Normal"; }
        bind "n" "Tab" { MovePane; }
        bind "p" { MovePaneBackwards; }
        bind "h" "Left" { MovePane "Left"; }
        bind "j" "Down" { MovePane "Down"; }
        bind "k" "Up" { MovePane "Up"; }
        bind "l" "Right" { MovePane "Right"; }
    }
    tab {
        bind "t" { SwitchToMode "Normal"; }
        bind "r" { SwitchToMode "RenameTab"; TabNameInput 0; }
        bind "m" "Left" "Up" { GoToPreviousTab; }
        bind "i" "Right" "Down" { GoToNextTab; }
        bind "Shift m" "Shift Left" "Shift Up" { MoveTab "Left"; }
        bind "Shift i" "Shift Right" "Shift Down" { MoveTab "Right"; }
        bind "n" { NewTab; SwitchToMode "Locked"; }
        bind "x" { CloseTab; SwitchToMode "Locked"; }
        bind "s" { ToggleActiveSyncTab; SwitchToMode "Locked"; }
        bind "b" { BreakPane; SwitchToMode "Locked"; }
        bind "]" { BreakPaneRight; SwitchToMode "Locked"; }
        bind "[" { BreakPaneLeft; SwitchToMode "Locked"; }
        bind "1" { GoToTab 1; SwitchToMode "Locked"; }
        bind "2" { GoToTab 2; SwitchToMode "Locked"; }
        bind "3" { GoToTab 3; SwitchToMode "Locked"; }
        bind "4" { GoToTab 4; SwitchToMode "Locked"; }
        bind "5" { GoToTab 5; SwitchToMode "Locked"; }
        bind "6" { GoToTab 6; SwitchToMode "Locked"; }
        bind "7" { GoToTab 7; SwitchToMode "Locked"; }
        bind "8" { GoToTab 8; SwitchToMode "Locked"; }
        bind "9" { GoToTab 9; SwitchToMode "Locked"; }
        bind "Tab" { ToggleTab; }
    }
    scroll {
        bind "s" { SwitchToMode "Normal"; }
        bind "e" { EditScrollback; SwitchToMode "Locked"; }
        bind "/" { SwitchToMode "Search"; SearchInput 0; }
        bind "Shift G" { ScrollToBottom; SwitchToMode "Locked"; }
        bind "n" "Down" { ScrollDown; }
        bind "e" "Up" { ScrollUp; }
        bind "Ctrl u" "PageDown" "Right" "m" { PageScrollDown; }
        bind "Ctrl d" "PageUp" "Left" "i" { PageScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "u" { HalfPageScrollUp; }
        bind "Alt c" { Copy; }
    }
    search {
        bind "/" { SwitchToMode "Normal"; }
        bind "Shift G" { ScrollToBottom; SwitchToMode "Normal"; }
        bind "n" "Down" { ScrollDown; }
        bind "e" "Up" { ScrollUp; }
        bind "Ctrl d" "PageDown" "Right" "l" { PageScrollDown; }
        bind "Ctrl u" "PageUp" "Left" "h" { PageScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "u" { HalfPageScrollUp; }
        bind "k" { Search "down"; }
        bind "K" { Search "up"; }
        bind "c" { SearchToggleOption "CaseSensitivity"; }
        bind "w" { SearchToggleOption "Wrap"; }
        bind "o" { SearchToggleOption "WholeWord"; }
    }
    renametab {
        bind "Enter" { SwitchToMode "Locked"; }
        bind "Esc" { UndoRenameTab; SwitchToMode "Tab"; }
    }
    renamepane {
        bind "Enter" { SwitchToMode "Locked"; }
        bind "Esc" { UndoRenamePane; SwitchToMode "Pane"; }
    }
    session {
        bind "o" { SwitchToMode "Normal"; }
        bind "s" { SwitchToMode "Scroll"; }
        bind "d" { Detach; }
        bind "w" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Locked"
        }
        bind "c" {
            LaunchOrFocusPlugin "configuration" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Locked"
        }
        bind "p" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Locked"
        }
        bind "a" {
            LaunchOrFocusPlugin "zellij:about" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Locked"
        }
    }
    shared {
      bind "Alt m" { MoveFocusOrTab "Left"; }
      bind "Alt i" { MoveFocusOrTab "Right"; }
      bind "Alt n" { MoveFocus "Down"; }
      bind "Alt e" { MoveFocus "Up"; }

    }
    shared_except "locked" "search" "renamepane" "renametab" {
        bind "Ctrl space" { SwitchToMode "Locked"; }
        bind "Left" { MoveFocusOrTab "Left"; }
        bind "Right" { MoveFocusOrTab "Right"; }
        bind "Down" { MoveFocus "Down"; }
        bind "Up" { MoveFocus "Up"; }
        bind "q" { Detach; }
        bind "Ctrl q" { Quit; }
        bind "n" { NewPane; SwitchToMode "Locked"; }
        bind "x" { CloseFocus; SwitchToMode "Locked"; }
        bind "w" { ToggleFloatingPanes; SwitchToMode "Locked"; }
        bind "=" "Alt +" { Resize "Increase"; }
        bind "-" { Resize "Decrease"; }
        bind "[" { PreviousSwapLayout; }
        bind "]" { NextSwapLayout; }
        bind "Tab" { ToggleTab; SwitchToMode "Locked"; }
    }
    shared_except "normal" "locked" "search" "renamepane" "renametab" {
        bind "Enter" "Esc" { SwitchToMode "Normal"; }
    }
    shared_except "pane" "locked"  "search" "renamepane" "renametab"{
        bind "p" { SwitchToMode "Pane"; }
    }
    shared_except "resize" "locked" "search" "renamepane" "renametab" {
        bind "r" { SwitchToMode "Resize"; }
    }
    shared_except "scroll" "locked"  "search" "renamepane" "renametab"{
        bind "s" { SwitchToMode "Scroll"; }
    }
    shared_except "session" "locked"  "search" "renamepane" "renametab"{
        bind "o" { SwitchToMode "Session"; }
    }
    shared_except "tab" "locked"  "search" "renamepane" "renametab"{
        bind "t" { SwitchToMode "Tab"; }
    }
    shared_except "move" "locked"  "search" "renamepane" "renametab"{
        bind "m" { SwitchToMode "Move"; }
    }
    shared_except "tmux" "locked"  "search" "renamepane" "renametab"{
        bind "Ctrl b" { SwitchToMode "Tmux"; }
    }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
    tab-bar location="zellij:tab-bar"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    compact-bar location="zellij:compact-bar"
    session-manager location="zellij:session-manager"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
    filepicker location="zellij:strider" {
        cwd "/"
    }
    configuration location="zellij:configuration"
    plugin-manager location="zellij:plugin-manager"
    about location="zellij:about"
}

// Plugins to load in the background when a new session starts
load_plugins {
  // "file:/path/to/my-plugin.wasm"
  // "https://example.com/my-plugin.wasm"
}

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
//
// on_force_close "quit"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
// simplified_ui true

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
// default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
pane_frames false

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// session_serialization false

// Whether pane viewports are serialized along with the session, default is false
// (Requires restart)
// Options:
//   - true
//   - false (default)
//
// serialize_pane_viewport true

// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// (Requires restart)
//
// scrollback_lines_to_serialize 10000

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "ansi"

// The name of the default layout to load on startup
// Default: "default"
// (Requires restart)
//
default_layout "default"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// (Requires restart)
// Options:
//   - true (default)
//   - false
//
// mouse_mode false

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
//
// copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
// (Requires restart)
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
// (Requires restart)
//
// theme_dir "~/.cache/wal"

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
//
// styled_underlines false

// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
//
// disable_session_metadata true

// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
//
// support_kitty_keyboard_protocol false

// Whether to stack panes when resizing beyond a certain size
// Default: true
//
// stacked_resize false

// Whether to show release notes on first version run
// Default: true
//
show_release_notes false

// Whether to show startup tips on session start
// Default: true
//
show_startup_tips false

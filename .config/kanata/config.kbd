;; Home row mods QWERTY example with more complexity.
;; Some of the changes from the basic example:
;; - when a home row mod activates tap, the home row mods are disabled
;;   while continuing to type rapidly
;; - tap-hold-release helps make the hold action more responsive
;; - pressing another key on the same half of the keyboard
;;   as the home row mod will activate an early tap action

(defcfg
  process-unmapped-keys yes
  ;; linux-dev (
  ;;   /dev/input/by-path/pci-0000:00:14.0-usb-0:1:1.0-event
  ;;   /dev/input/by-id/usb-Dell_Dell_USB_Keyboard-event-kbd
  ;; )
)

(defsrc
  caps  a   s   d   f   g   h  j   k   l   ;  apo
                 spc ralt
)

(defvar
  ;; Note: consider using different time values for your different fingers.
  ;; For example, your pinkies might be slower to release keys and index
  ;; fingers faster.
  tap-time 200
  hold-time 150
  tap-time-slow 200
  hold-time-slow 150
  type-delay 500

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)

(deflayer base
  esc @a  @s  @d  @f  g  h  @j  @k  @l  @; @apo
                   @space @ralt
)

(deflayer nomods
  esc  a  s   d   f   g   h   j   k   l   ; @apo
                   @space @ralt
)

;; nav layer
(deflayer nav
  C-bspc   bspc   home   pgup   pgdn   end   left   down   up   right   enter tab
                                    @space MediaPlayPause
)
(deffakekeys
  to-base (layer-switch base)
)


(defalias
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap $type-delay)
  )
  space ( tap-hold $tap-time $hold-time spc (layer-while-held nav))
  ralt C-spc
  a (tap-hold-release-keys $tap-time-slow $hold-time-slow (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys $tap-time-slow $hold-time-slow (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lctl $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lsft $left-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) lsft $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) lctl $right-hand-keys)
  l (tap-hold-release-keys $tap-time-slow $hold-time-slow (multi l @tap) lalt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time-slow $hold-time-slow (multi ; @tap) lmet $right-hand-keys)
  apo (fork (unmod lsft ')
        (unmod ')
        (f j lsft rsft))
)
